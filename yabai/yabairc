# for this to work you must configure sudo such that
# it will be able to run the command without password

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

#!/usr/bin/env sh

# bar settings
yabai -m config top_padding 3

# global settings
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off

yabai -m config window_placement             second_child
yabai -m config window_topmost               off

yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config window_shadow                on

yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off

# Mouse support
yabai -m config mouse_modifier               alt
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize

# general space settings
yabai -m config layout                       bsp
yabai -m config bottom_padding               3
yabai -m config left_padding                 3
yabai -m config right_padding                3
yabai -m config window_gap                   3

# float system preferences
yabai -m rule --add app='^System Information$' manage=off
yabai -m rule --add app='^System Preferences$' manage=off
yabai -m rule --add title='Preferences$' manage=off

# float settings windows
yabai -m rule --add title='Settings$' manage=off

# sketchybar padding on top screen
#SKETCHYBAR_HEIGHT=$(sketchybar --query bar.height)
yabai -m config external_bar all:26:0

echo "yabai configuration loaded.."

# bring next app into focus after close
yabai -m signal --add event=window_destroyed active=yes action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null"

# yabai -m signal --add event=window_created action="sketchybar -m --trigger window_created &> /dev/null"
# yabai -m signal --add event=window_destroyed action="sketchybar -m --trigger window_destroyed &> /dev/null"

# yabai -m signal --add event=window_focused active=yes \
#     action="sketchybar --trigger yabai_space_changed ORIGIN=window_focused SPACE=\$(yabai -m query --windows --window \$YABAI_WINDOW_ID | jq '.space') &> /dev/null"

# yabai -m signal --add event=space_changed active=yes \
#     action="sketchybar --trigger yabai_space_changed ORIGIN=space_changed SPACE=\$(yabai -m query --spaces | jq -c '.[] | select(.id == \$YABAI_SPACE_ID).index') &> /dev/null"
